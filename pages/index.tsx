/* eslint-disable react/no-unescaped-entities */
/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import { FormEvent, useState } from "react";
import { useLogStore } from "../stores/logStore";
var pluralize = require("pluralize");

export default function Home() {
  const [fileContent, setFileContent] = useState<string[]>([]);
  const {
    logInformation,
    analyzeLog,
    unknownDamageCalc,
    blackKightHealthCalc,
    blackKnightHealth
  } = useLogStore();
  const [errorMessage, setErrorMessage] = useState<string>("");
  //Visual States & Functions

  //Handle Functions
  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    const fileInput = event.currentTarget.querySelector(
      'input[type="file"]'
    ) as HTMLInputElement;
    const file = fileInput?.files?.[0];

    if (!file) {
      setErrorMessage("No File Uploaded");
      return;
    }

    const reader = new FileReader();

    reader.onload = (e) => {
      const contents = e.target?.result as string;
      const lines = contents.split("\n");
      setFileContent(lines);

      //Read Log
      const res = analyzeLog(lines);
      blackKightHealthCalc(lines);

      if (res) setErrorMessage(res.body);
      else setErrorMessage("");
    };

    reader.readAsText(file as Blob);
  };

  //React Nodes
  let creatureList = [];
  for (let [
    key,
    value
  ] of logInformation.damageTaken.byCreatureKind.entries()) {
    creatureList.push(
      <li key={key + value.toString()} className="flex items-center gap-2">
        <img
          alt="" //Decorative Image Only
          src={`https://static.tibia.com/images/library/${key
            .replace(/\s/g, "")
            .toLowerCase()}.gif`}
          className="w-12"
        />
        <p>
          By {key.replace(/(?:^|\s)\S/g, (a) => a.toUpperCase())}:{" "}
          <span className="font-semibold text-rose-400">{value}</span>
          <span className="text-xs"> hp</span>
        </p>
      </li>
    );
  }

  let lootList = [];
  for (let [key, value] of logInformation.loot.entries()) {
    lootList.push(
      <li key={key + value.toString()} className="flex items-center gap-1">
        <img
          alt="" //Decorative Image Only
          src={`https://www.tibiawiki.com.br/images/e/ef/Brocade_Bag.gif`}
        />
        <p>
          {value}{" "}
          {pluralize(
            key.replace(/(?:^|\s)\S/g, (a) => a.toUpperCase()),
            value
          )}
        </p>
      </li>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Background Image */}
      <div className="invisible absolute bottom-0 left-0 right-0 top-0 -z-30 bg-neutral-700 bg-opacity-80 bg-stone-pattern bg-auto bg-repeat opacity-60 bg-blend-multiply blur-[0px] lg:visible" />
      {/* Body */}
      <div className="mx-auto flex h-full flex-col border-x-2 border-neutral-800 bg-neutral-700 p-4 lg:h-screen lg:max-w-[80vw] lg:shadow-3xl">
        <header className="flex justify-center pb-6 lg:pb-8">
          <img
            alt=""
            src="/logo.png"
            className={fileContent.length > 0 ? "h-12" : "max-h-32"}
          />
          <h1 className="sr-only">TibiAnalyser. Analyse Tibia Server Logs!</h1>
        </header>

        <main className="flex flex-col-reverse lg:h-full lg:flex-row lg:justify-center lg:gap-8 lg:overflow-hidden">
          {/* Log & Form Section */}
          <section className="flex flex-col gap-4">
            {/* Form Section */}
            <section>
              <h1 className="sr-only">Log & Form Section</h1>
              <form
                onSubmit={handleSubmit}
                className="flex flex-wrap items-end gap-4"
              >
                <label>
                  <p className="mb-2">
                    Upload a Server Log{" "}
                    <span className="font-semibold">.txt</span> file
                  </p>{" "}
                  <input
                    type="file"
                    className="cursor-pointer rounded-lg bg-neutral-600 pr-2"
                  />
                </label>
                <button
                  type="submit"
                  className="rounded-md bg-neutral-600 px-4 py-2 transition-all hover:-translate-y-1 hover:bg-neutral-500 active:translate-y-0"
                >
                  Analyse
                </button>
                {errorMessage && <p className="text-red-400">{errorMessage}</p>}
              </form>
            </section>
            {/* Log Section */}
            {fileContent.length > 0 && (
              <section className="max-h-[500px] overflow-y-auto rounded-md border border-neutral-800 bg-neutral-600 p-2 scrollbar-thin lg:h-full lg:max-h-full">
                <h1 className="sr-only">Log Content:</h1>
                <ul>
                  {fileContent.map((line, index) => (
                    <li key={index}>{line}</li>
                  ))}
                </ul>
              </section>
            )}
          </section>

          {/* Data Section */}
          {fileContent.length > 0 && (
            <section className="mb-8 pr-8 scrollbar-thin lg:h-full lg:overflow-y-auto">
              <h1 className="sr-only">Data Section</h1>
              <ul className="flex flex-col gap-2">
                {/* Experience Gained */}
                <li className="flex items-center gap-2">
                  <img
                    src="https://www.tibiawiki.com.br/images/b/b2/Achievement_Info_1-1.gif"
                    alt="" //Decorative Image Only
                    className="w-8"
                  />
                  <p>
                    Experience Gained Total:{" "}
                    <span className="font-semibold text-cyan-400">
                      {logInformation.experienceGained}
                    </span>
                    <span className="text-xs"> xp</span>
                  </p>
                </li>

                {/* Damage Healed */}
                <li className="flex items-center gap-2">
                  <img
                    src="https://www.tibiawiki.com.br/images/9/91/Great_Health_Potion.gif"
                    alt="" //Decorative Image Only
                  />
                  <p>
                    Hitpoints Healed Total:{" "}
                    <span className="font-semibold text-emerald-400">
                      {logInformation.hitpointsHealed}
                    </span>
                    <span className="text-xs"> hp</span>
                  </p>
                </li>

                {/* Damage Taken */}
                <li>
                  <details open className="group rounded-sm transition-all">
                    <summary className="mb-1 flex cursor-pointer items-center gap-2 rounded-sm p-1 transition-all hover:bg-neutral-600">
                      <img
                        src="https://www.tibiawiki.com.br/images/c/c4/Stonecutter_Axe.gif"
                        alt="" //Decorative Image Only
                      />
                      <p>
                        Damage Taken Total:{" "}
                        <span className="font-semibold text-rose-400">
                          {logInformation.damageTaken.total}
                        </span>
                        <span className="text-xs"> hp</span>
                      </p>
                    </summary>
                    <ul className="ml-8">
                      <li className="flex items-center">
                        <img
                          alt=""
                          src="https://www.tibiawiki.com.br/images/b/b7/White_Skull.gif"
                        />
                        <p>
                          By Unknown Sources:{" "}
                          <span className="font-semibold text-rose-400">
                            {unknownDamageCalc()}
                          </span>
                          <span className="text-xs"> hp</span>
                        </p>
                      </li>
                    </ul>
                  </details>
                </li>

                {/* Damage by Creature Kind */}
                <li>
                  <details open className="group rounded-sm transition-all">
                    <summary className="mb-1 flex cursor-pointer items-center gap-2 rounded-sm p-1 transition-all hover:bg-neutral-600">
                      <img
                        alt=""
                        src="https://www.tibiawiki.com.br/images/8/80/Execowtioner_Axe.gif"
                      />
                      <p>Damage Taken By Creature Kind</p>
                    </summary>
                    <ul className="ml-8">{creatureList}</ul>
                  </details>
                </li>

                {/* List of Items */}
                <li>
                  <details open className="group rounded-sm transition-all">
                    <summary className="mb-1 flex cursor-pointer items-center gap-2 rounded-sm p-1 transition-all hover:bg-neutral-600">
                      <img
                        alt=""
                        src="https://www.tibiawiki.com.br/images/d/d8/Brocade_Backpack.gif"
                      />
                      <p>List of Items</p>
                    </summary>
                    <ul className="ml-8">{lootList}</ul>
                  </details>
                </li>

                {/* Black Knight's Health */}
                <li>
                  <div className="-ml-2 -mt-5 flex items-end">
                    <img
                      alt=""
                      src="https://www.tibiawiki.com.br/images/e/ef/Black_Knight.gif"
                      className="w-12"
                    />
                    <p>
                      Black Knight's Health:{" "}
                      <span
                        className={
                          typeof blackKnightHealth === "number"
                            ? "font-semibold text-rose-400"
                            : "text-red-400"
                        }
                      >
                        {blackKnightHealth}
                      </span>
                      {typeof blackKnightHealth === "number" && (
                        <span className="text-xs"> hp</span>
                      )}
                    </p>
                  </div>
                </li>
              </ul>
            </section>
          )}
        </main>
      </div>
    </>
  );
}
